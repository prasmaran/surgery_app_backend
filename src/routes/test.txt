router.post('/upload', cloudinaryUpload, async (req, res) => {

    if (!req.files.image) return res.send({
        success: false,
        message: 'Please upload an image!'
    })

    // Reducing image quality for performance + better storage
    const compressImagePath = path.join(__dirname, '../../', 'images', 'compressed', Date.now() + '.jpeg')
    sharp(req.files.image[0].path).resize(null).jpeg({
        quality: 70,
        chromaSubsampling: '4:4:4'
    }).toFile(compressImagePath, (err, info) => {
        if (err) {
            console.log(err)
        } else {
            console.log(info)
        }
    })

    console.log(req.files.image[0].path)

    try {
        const result = await cloudinary.uploader
            .upload(
                req.files.image[0].path,
                { upload_preset: 'dev_patients' }
            )
        const secureURL = result.secure_url

        // Values from the form
        // testing masteruserid_fk
        const masterUserId_fk = req.body.masterUserId_fk
        const uploadedImage = secureURL
        const uploadedTitle = req.body.title
        const uploadedDescription = req.body.description
        const uploadedFluidDrain = req.body.fluid_drain
        const uploadedPainrate = req.body.painrate
        const uploadedRedness = req.body.redness
        const uploadedSwelling = req.body.swelling
        const uploadedOdour = req.body.odour
        const uploadedFever = req.body.fever

        // Params to insert into MySQL table
        const params = {
            masterUserId_fk: masterUserId_fk,
            progressImage: uploadedImage,
            progressTitle: uploadedTitle,
            progressDescription: uploadedDescription,
            quesFluid: uploadedFluidDrain,
            quesPain: uploadedPainrate,
            quesRedness: uploadedRedness,
            quesSwelling: uploadedSwelling,
            quesOdour: uploadedOdour,
            quesFever: uploadedFever,
            doctorAssigned: 21
        }

        console.log(params)

        res.send({
            result
        })

        // pool.getConnection((err, connection) => {

        //     if (err) {
        //         console.log(err);
        //         res.sendStatus(500);
        //         return;
        //     }

        //     let query = 'INSERT INTO progress_book_entry SET ?'
        //     connection.query(query, params, (err, rows) => {
        //         connection.release()
        //         if (!err) {
        //             let response = `New image details with ID: ${rows.insertId} has been added.`
        //             res.send({
        //                 success: true,
        //                 message: response
        //             })
        //         } else {
        //             console.log(err)
        //         }
        //     })
        // })

    } catch (error) {
        console.log(error)
        res.status(500).json({
            success: false,
            message: error.message
        })
    }

})